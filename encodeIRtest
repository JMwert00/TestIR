<!DOCTYPE html>
<html lang="en">
<head>
  <style>
    body { margin: auto;  position: relative; }
    svg {
      display:block; position:relative;
      top:0%; left:0%; width:25%; height:25%;
      align-self: right;
      cursor: pointer;
    }
    toggle {
      width:100%;
    }
  </style>
  <script src="https://www.puck-js.com/puck.js"></script>
  <script type="module">
    async function loadCSVFile() {
      const response = await fetch('48,-1.csv'); // Replace 'your-csv-file.csv' with the actual filename
      const csvData = await response.text();
      return csvData;
    }

    async function populateFunctions() {
      const selectedProtocol = document.getElementById('toggle').value;
      const functionOptions = document.getElementById('function-options');

      // Clear previous options
      functionOptions.innerHTML = '';
      // Fetch and parse CSV data
      const csvData = await loadCSVFile();
      const csvRows = csvData.split('\n').slice(1); // Exclude header
      console.log(csvData)
      for (const row of csvRows) {
        const [functionName, protocol, n1, n2, n3] = row.split(',');
        if (protocol === selectedProtocol) {
          const button = document.createElement('button');
          button.className = 'function-btn';
          button.textContent = functionName;

          button.addEventListener('click', async function () {
            let result = await encode(protocol, parseInt(n1), parseInt(n2), parseInt(n3));
            console.log(result);
          });
          functionOptions.appendChild(button);
        }
      }
    }

    // Get the actual curve inside the SVG. You could make different
    // parts of a more complex SVG do different things...
    var path = document.getElementsByTagName('path')[0];
    // Make sure your mouse cursor turns into a hand when over it, and gray it out
    path.style="cursor:pointer;fill:#BBB";
    // the possible states we could be in
    var state = 0;
    var states = [
      { color : "#444", command : "digitalWrite([LED3,LED2,LED1],0);\n" },
      { color : "green", command : "digitalWrite([LED3,LED2,LED1],2);\n" },
    ];
    // Now send commands to turn the LED on or off
    path.addEventListener("click", function() {
      state++;
      if (state >= states.length)
        state = 0;
      path.style.fill = states[state].color;
      Puck.write(states[state].command);
    });
    document.getElementById('toggle').addEventListener('change', populateFunctions);
  </script>
</head>
<body>
  <svg viewBox="0 0 24 24">
    <path fill="#000000" d="M12,2A7,7 0 0,0 5,9C5,11.38 6.19,13.47 8,14.74V17A1,1 0 0,0 9,18H15A1,1 0 0,0 16,17V14.74C17.81,13.47 19,11.38 19,9A7,7 0 0,0 12,2M9,21A1,1 0 0,0 10,22H14A1,1 0 0,0 15,21V20H9V21Z" />
  </svg>
  <div id="toggle-container">
    <select id="toggle">
      <option>...</option>
      <option>benq</option>
      <!-- Add other protocol options here -->
    </select>
  </div>
  <div id="function-options"></div>
</body>
</html>
